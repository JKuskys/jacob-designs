name: Build and Deploy components
on:
  push:
    branches:
      - master
permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: node:14-alpine

    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run bootstrap
      - run: npm run build
      - run: npm run build-storybook

  test-e2e:
    name: Test e2e
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3      
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'
        registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm run bootstrap
      - run: npm run test-e2e

  test-components:
    name: Test components
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm run bootstrap
      - run: npm run test-jest

  publish-storybook:
    name: Deploy storybook 
    runs-on: ubuntu-latest
    container: node:14-alpine

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Install and Build üîß # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm install
          npm run bootstrap
          npm run build
          npm run build-storybook

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: packages/jkd-universal-components/storybook-static # The folder the action should deploy.


  publish-package:
    name: Deploy npm package
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # set this token manually
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: "0" # pulls all history and tags for Lerna to detect what packages changed.
        token: ${{ secrets.GITHUB_TOKEN }} # this token is available by default

    # setup .npmrc using NODE_AUTH_TOKEN
    - name: Setup .npmrc file for publish
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Configure Git User
      run: |
        git config --global user.email "lerna-ci@jitsu.com"
        git config --global user.name "lerna-ci@$GITHUB_ACTOR"

    - name: Check if able to publish changes
      run: npm whoami # will throw and exit if npm is not ready to publish

    - name: Install dependencies
      run: | 
        npm install
        npm run bootstrap
        npm run build

    - name: Publish
      run: lerna publish minor --no-verify-access --yes # the flag is needed if NPM_TOKEN is an Automation Token